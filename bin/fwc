#!/usr/bin/python

import os
import sys
import re
import logging
import time

from Cheetah.Template import Template

from fwc import firewall
from fwc import config

def parse_args():
    p = config.Config()
    p.add_option('-o', '--output')
    p.add_option('-x', '--exclude',
        action='append', default=[])
    p.add_option('-D', '--dump',
            action='store_true')
    p.add_option('--debug',
            action='store_true')

    return p.parse_args()

def debug_dump(fw):
    import pprint
    pprint.pprint(fw.rules)
    pprint.pprint(fw.chains)

def generate_output (fw, opts):
    tmpl = Template(
            file=opts.template,
            namespaces={
                'rules': fw.rules,
                })

    if opts.output:
        sys.stdout = open(opts.output, 'w')

    print '# Generated at %s by fwc.' % time.ctime()
    print '# Changes made here will be lost when this file is'
    print '# next generated.'
    print
    print tmpl

def main():
    global log

    opts, args = parse_args()
    firewall.configure_logging(opts)
    log = logging.getLogger('fwc')
    fw = firewall.Firewall(opts)

    log.info('Start reading rules.')
    fw.read_rules()
    log.info('Finished reading rules.')

    if opts.dump:
        log.info('Generating debug dump.')
        debug_dump(fw)
    else:
        log.info('Generating output.')
        generate_output(fw, opts)

if __name__ == '__main__':
    main()

# vim: set ai ts=4 sw=4 expandtab :

